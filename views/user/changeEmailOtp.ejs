<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>OTP Verification</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Arial', sans-serif;
    }

    body {
      background-color: #f5f5f5;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .otp-container {
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      padding: 30px;
      width: 100%;
      max-width: 450px;
      text-align: center;
    }

    .logo {
      margin-bottom: 20px;
    }

    h2 {
      color: #2e7d32;
      margin-bottom: 10px;
    }

    .subtitle {
      color: #666;
      margin-bottom: 30px;
      font-size: 14px;
    }

    .otp-input {
      width: 100%;
      padding: 15px;
      text-align: center;
      font-size: 18px;
      border: 1px solid #ddd;
      border-radius: 5px;
      outline: none;
      transition: all 0.3s;
      margin-bottom: 30px;
    }

    .otp-input:focus {
      border-color: #2e7d32;
      box-shadow: 0 0 5px rgba(46, 125, 50, 0.3);
    }

    .otp-input.valid {
      border-color: #4caf50;
      background-color: #f0f9f0;
    }

    .otp-input.invalid {
      border-color: #f44336;
    }

    .verify-btn {
      background-color: #2e7d32;
      color: white;
      border: none;
      padding: 12px 30px;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
      transition: background-color 0.3s;
    }

    .verify-btn:hover {
      background-color: #1b5e20;
    }

    .verify-btn:disabled {
      background-color: #cccccc;
      cursor: not-allowed;
    }

    .resend-text {
      margin-top: 20px;
      color: #666;
      font-size: 14px;
    }

    .resend-link {
      color: #2e7d32;
      text-decoration: none;
      font-weight: bold;
      cursor: pointer;
    }

    .resend-link:hover {
      text-decoration: underline;
    }

    .resend-link.disabled {
      color: #999;
      cursor: not-allowed;
      pointer-events: none;
    }

    .error-message,
    .success-message {
      font-size: 13px;
      margin-top: -20px;
      margin-bottom: 20px;
      display: none;
    }

    .error-message {
      color: #f44336;
    }

    .success-message {
      color: #2e7d32;
    }

    .timer {
      color: #666;
      font-size: 14px;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <div class="otp-container">
    <div class="logo">
      <!-- Replace with your logo -->
      <svg width="50" height="50" viewBox="0 0 24 24" fill="none">
        <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z" fill="#2e7d32"/>
        <path d="M12 6C8.69 6 6 8.69 6 12C6 15.31 8.69 18 12 18C15.31 18 18 15.31 18 12C18 8.69 15.31 6 12 6ZM12 16C9.79 16 8 14.21 8 12C8 9.79 9.79 8 12 8C14.21 8 16 9.79 16 12C16 14.21 14.21 16 12 16Z" fill="#2e7d32"/>
        <path d="M12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z" fill="#2e7d32"/>
      </svg>
    </div>

    <h2>OTP Verification</h2>
    <p class="subtitle">We've sent a 6-digit code to your email/phone</p>

    <div class="error-message" id="error-message">Please enter a valid 6-digit OTP code</div>
    <div class="success-message" id="success-message">OTP is valid. Submitting form...</div>
    <% if(message){ %>
        <div class="error" style="color: red;"><%= message %></div>
        <% } %>
    <form action="/verifychangeEmailOtp" method="post" id="otp-form">
      <input name="otp" type="text" class="otp-input" id="otp-input" maxlength="6" inputmode="numeric"  placeholder="Enter 6-digit OTP">
      <button type="submit" class="verify-btn" id="verify-btn">Verify</button>
    </form>

    <p class="resend-text">
      Didn't receive code?
      <button class="resend-link disabled" id="resend-link" onclick="reSendOTP()">Resend</button>
      <span class="timer" id="timer">(01:00)</span>
    </p>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const otpInput = document.getElementById('otp-input');
      const errorMessage = document.getElementById('error-message');
      const successMessage = document.getElementById('success-message');
      const resendLink = document.getElementById('resend-link');
      const timerElement = document.getElementById('timer');
      const form = document.getElementById('otp-form');
      const verifyBtn = document.getElementById('verify-btn');

      let timeLeft = 60;
      let timer;

      function startTimer() {
        timeLeft = 60;
        resendLink.classList.add('disabled');
        verifyBtn.disabled = false; // Enable verify button when timer starts
        updateTimerDisplay();

        timer = setInterval(() => {
          timeLeft--;
          updateTimerDisplay();

          if (timeLeft <= 0) {
            clearInterval(timer);
            resendLink.classList.remove('disabled');
            timerElement.textContent = '';
            verifyBtn.disabled = true; // Disable verify button when timer ends
          }
        }, 1000);
      }

      function updateTimerDisplay() {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerElement.textContent = `(${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')})`;
      }

      startTimer();
      otpInput.focus();

      otpInput.addEventListener('input', (e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');
        if (e.target.value.length === 6) {
          e.target.classList.add('valid');
          e.target.classList.remove('invalid');
          errorMessage.style.display = 'none';
        } else {
          e.target.classList.remove('valid');
          if (e.target.value.length > 0) {
            e.target.classList.add('invalid');
            errorMessage.textContent = 'Please enter your 6-digit OTP';
            errorMessage.style.display = 'block';
          } else {
            e.target.classList.remove('invalid');
            errorMessage.style.display = 'none';
          }
        }
      });

      form.addEventListener('submit', (e) => {
        e.preventDefault(); // prevent default to check validation
        const otp = otpInput.value;

        if (otp.length !== 6 || isNaN(otp)) {
          errorMessage.textContent = 'Please enter your 6-digit OTP';
          errorMessage.style.display = 'block';
          successMessage.style.display = 'none';
          otpInput.classList.add('invalid');
          return;
        }

        // If valid
        errorMessage.style.display = 'none';
        successMessage.style.display = 'block';
        otpInput.classList.add('valid');

        // Simulate short delay before submitting
        setTimeout(() => {
          form.submit(); // ACTUALLY submits the POST request
        }, 500);
      });

      resendLink.addEventListener('click', () => {
        if (resendLink.classList.contains('disabled')) return;

        otpInput.value = '';
        otpInput.classList.remove('valid', 'invalid');
        errorMessage.style.display = 'none';
        successMessage.style.display = 'none';
        verifyBtn.disabled = false; // Re-enable verify button when resending
        otpInput.focus();
        clearInterval(timer);
        startTimer();
      });
      
    });

    async function reSendOTP() {
        try {
          const response = fetch('/resendOTPwhileEmailchange',{
            headers:{
              'Content-type':'application/json'
            }
          })
        } catch (error) {
          
        }
      }
  </script>
</body>
</html> 