<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Verify OTP</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: linear-gradient(to bottom right, #ffffff, #e8f5e9);
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .container {
      background-color: #fff;
      border: 2px solid #4caf50;
      padding: 40px 30px;
      border-radius: 15px;
      box-shadow: 0 12px 25px rgba(76, 175, 80, 0.2);
      text-align: center;
      width: 100%;
      max-width: 400px;
      animation: slideUp 0.6s ease-out;
    }
    @keyframes slideUp {
      from { opacity: 0; transform: translateY(50px);}
      to { opacity: 1; transform: translateY(0);}
    }
    h2 { color: #2e7d32; margin-bottom: 20px;}
    .otp-input {
      width: 100%;
      padding:13px 2px;
      border: 2px solid #4caf50;
      border-radius: 8px;
      font-size: 16px;
      margin-bottom: 12px;
      outline: none;
      background-color: #f0fff0;
      color: #2e7d32;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
      letter-spacing: 0.2em;
      text-align: center;
    }
    .otp-input:focus {
      border-color: #388e3c;
      box-shadow: 0 0 5px rgba(76, 175, 80, 0.4);
      background-color: #ffffff;
    }
    .verify-btn {
      background-color: #4caf50;
      color: white;
      border: none;
      padding: 12px 25px;
      border-radius: 10px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 10px;
      margin-bottom: 10px;
      width: 100%;
    }
    .verify-btn:disabled {
      background-color: #c8e6c9 !important;
      cursor: not-allowed;
    }
    .resend-btn {
      background-color: #4caf50;
      color: white;
      border: none;
      padding: 8px 18px;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 8px;
      margin-bottom: 8px;
      width: auto;
      display: inline-block;
    }
    .verify-btn:hover:not(:disabled),
    .resend-btn:hover:not(:disabled) {
      background-color: #388e3c;
    }
    .error-message {
      color: #d32f2f;
      background-color: #ffebee;
      border: 1px solid #f44336;
      padding: 10px;
      margin-bottom: 15px;
      border-radius: 6px;
      font-size: 14px;
      display: none;
    }
    .resend-wrapper { margin-top: 10px;}
    .resend-text { font-size: 14px; color: #555; margin-bottom: 5px;}
    #timer { font-size: 13px; color: #388e3c; margin-bottom: 8px;}
    .disabled-btn {
      background-color: #c8e6c9 !important;
      cursor: not-allowed;
    }
    @media (max-width: 500px) {
      .container { padding: 25px 8px; }
      .otp-input, .verify-btn { font-size: 15px; }
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <div class="container" role="main" aria-labelledby="otp-title">
    <h2 id="otp-title">Verify OTP</h2>
    <div class="error-message" id="errorBox" aria-live="polite"></div>
    <input name="otp" id="otpInput" type="text" class="otp-input" maxlength="6" inputmode="numeric" pattern="[0-9]*" placeholder="Enter 6-digit OTP" autocomplete="one-time-code" required aria-label="Enter 6-digit OTP">
    <button class="verify-btn" id="verifyBtn" onclick="verifyOTP()" disabled>Verify</button>
    <div class="resend-wrapper">
      <div class="resend-text">Didnâ€™t receive the code?</div>
      <div id="timer">Resend available in 01:00</div>
      <button onclick="resendOtp()" class="resend-btn disabled-btn" id="resendBtn" disabled>Resend OTP</button>
    </div>
  </div>
  <script>
    // --- TIMER LOGIC ---
    let countdown = 60;
    let timerInterval = null;
    const timerDisplay = document.getElementById("timer");
    const resendBtn = document.getElementById("resendBtn");
    const verifyBtn = document.getElementById("verifyBtn");
    const otpInput = document.getElementById("otpInput");
    const errorBox = document.getElementById("errorBox");

    function startTimer() {
      clearInterval(timerInterval);
      countdown = 60;
      resendBtn.disabled = true;
      resendBtn.classList.add('disabled-btn');
      timerDisplay.textContent = `Resend available in 01:00`;
      timerInterval = setInterval(() => {
        countdown--;
        const minutes = String(Math.floor(countdown / 60)).padStart(2, '0');
        const seconds = String(countdown % 60).padStart(2, '0');
        timerDisplay.textContent = `Resend available in ${minutes}:${seconds}`;
        if (countdown <= 0) {
          clearInterval(timerInterval);
          timerDisplay.textContent = '';
          resendBtn.disabled = false;
          resendBtn.classList.remove('disabled-btn');
        }
      }, 1000);
    }
    startTimer();

    // --- OTP INPUT HANDLING ---
    otpInput.addEventListener('input', function(e) {
      // Only allow numbers
      this.value = this.value.replace(/\D/g, '');
      // Hide error on input
      errorBox.style.display = 'none';
      errorBox.textContent = '';
      // Enable verify button only if 6 digits
      verifyBtn.disabled = (this.value.length !== 6);
    });

    // Autofocus input on load
    window.onload = () => { otpInput.focus(); };

    // --- RESEND OTP ---
    async function resendOtp() {
      resendBtn.disabled = true;
      resendBtn.classList.add('disabled-btn');
      try {
        const response = await fetch('/resendOTPwhileEmailchange');
        const result = await response.json();
        if (response.ok) {
          Swal.fire({
            toast:true,
            position:'top-end',
            icon: 'success',
            title: 'OTP Sent',
            text: result.message || 'A new OTP has been sent to your email!',
            timer: 2000,
            showConfirmButton: false
          });
          startTimer();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Oops!',
            text: result.message || 'Failed to resend OTP. Please try again.',
            confirmButtonColor: '#f44336'
          });
          resendBtn.disabled = false;
          resendBtn.classList.remove('disabled-btn');
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Something went wrong. Please check your connection.',
          confirmButtonColor: '#f44336'
        });
        resendBtn.disabled = false;
        resendBtn.classList.remove('disabled-btn');
      }
    }

    // --- VERIFY OTP ---
    async function verifyOTP() {
      const otp = otpInput.value.trim();
      errorBox.style.display = 'none';
      errorBox.textContent = '';
      if (otp.length !== 6 || isNaN(otp)) {
        errorBox.style.display = 'block';
        errorBox.textContent = 'Please enter a valid 6-digit OTP.';
        otpInput.focus();
        return;
      }
      verifyBtn.disabled = true;
      try {
        const response = await fetch('/verifychangeEmailOtp?_method=PATCH', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ otp })
        });
        const result = await response.json();
        if (response.ok) {
          window.location.href = result.url;
        } else {
          errorBox.style.display = 'block';
          errorBox.textContent = result.message || 'Invalid OTP. Please try again.';
          verifyBtn.disabled = false;
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Network Error',
          text: 'Failed to verify OTP. Please try again.',
          confirmButtonColor: '#f44336'
        });
        verifyBtn.disabled = false;
      }
    }

    // Allow pressing Enter to submit
    otpInput.addEventListener('keyup', function(e) {
      if (e.key === 'Enter' && this.value.length === 6 && !verifyBtn.disabled) {
        verifyOTP();
      }
    });
  </script>
</body>
</html>